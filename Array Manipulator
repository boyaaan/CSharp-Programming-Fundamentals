using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Numerics;

class Program
{
    static void Main()
    {

        int[] nums = Console.ReadLine()
            .Split()
            .Select(int.Parse)
            .ToArray();

        string input = string.Empty;
        while ((input = Console.ReadLine()) != "end")
        {
            var currInput = input.Split().ToArray();

            var command = currInput[0];

            switch (command)
            {
                case "exchange":
                    var indexExchange = int.Parse(currInput[1]);

                    nums = ExchangeArrayElement(nums, indexExchange);
                    break;

                case "max":
                case "min":
                    var maxOrMin = command;
                    var evenOrOdd = currInput[1];

                    FindElementsEvenOdd(nums, maxOrMin, evenOrOdd);
                    
                    break;

                case "first":
                case "last":
                    var firstOrLast = command;
                    var count = int.Parse(currInput[1]);
                    var evenOddFirstLast = currInput[2];

                    FindFirstLastIndex(nums, firstOrLast, count, evenOddFirstLast);

                    break;
            }
        }

        Console.WriteLine("[{0}]", string.Join(", ", nums));

    }

    static int[] ExchangeArrayElement(int[] nums, int indexExchange)
    {
        var isValidIndex = indexExchange >= 0 && indexExchange < nums.Length;

        if (!isValidIndex)
        {
            Console.WriteLine("Invalid index");
        }

        var leftIndex = nums.Take(indexExchange + 1);
        var rightIndex = nums.Skip(indexExchange + 1);

        var concatArray = rightIndex.Concat(leftIndex).ToArray();

        return concatArray;

    }

    static void FindElementsEvenOdd(int[] nums, string maxOrMin, string evenOrOddMaxMin)
    {
        var evenOrOddElementsParuty = evenOrOddMaxMin == "even" ? 0 : 1;
        var evenOrOdd = nums.Where(x => x % 2 == evenOrOddElementsParuty).ToArray();

        if (evenOrOdd.Length <= 0 )
        {
            Console.WriteLine("No matches");
        }
        else
        {
            var maxOrMinElement = maxOrMin == "max" ? evenOrOdd.Max() : evenOrOdd.Min();
            var index = Array.LastIndexOf(nums, maxOrMinElement);
            Console.WriteLine(index);
        }


    }

    static void FindFirstLastIndex(int[] nums, string firstOrLast, int count, string evenOddFirstLast)
    {
        if (count > nums.Length)
        {
            Console.WriteLine("Invalid count");
            return;
        }

        var evenOddparity = evenOddFirstLast == "even" ? 0 : 1;
        var evenOrOdd = nums.Where(x => x % 2 == evenOddparity).ToArray();

        int[] findElement;
        if (firstOrLast == "first")
        {
            findElement = evenOrOdd.Take(count).ToArray();
        }
        else
        {
            findElement = evenOrOdd.Reverse().Take(count).Reverse().ToArray();
        }
        Console.WriteLine("[{0}]",string.Join(", ",findElement));
    }
}

