using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.Linq;
using System.Numerics;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

class Startup
{
    static void Main()
    {
        int n = int.Parse(Console.ReadLine());

        var fils = new Dictionary<string, Dictionary<string, long>>();

        for (int i = 0; i < n; i++)
        {
            var input = Console.ReadLine()
                .Split('\\').ToList();

            var root = input[0];

            var filsSizeAndFileName = input[input.Count - 1]
                .Split(';').ToList();

            var extansion = filsSizeAndFileName[0];
            var size = long.Parse(filsSizeAndFileName[1]);

            if (!fils.ContainsKey(root))
            {
                fils[root] = new Dictionary<string, long>();
            }

            fils[root][extansion] = size;
        }

        var extansionRoot = Console.ReadLine()
            .Split("in ".ToCharArray(), StringSplitOptions.RemoveEmptyEntries)
            .ToList();

        var exestRoot = extansionRoot[1];
        var exestExtension = extansionRoot[0];

        if (!fils.ContainsKey(exestRoot))
        {
            Console.WriteLine("No");
            return;
        }

        var final = new Dictionary<string, long>();


        if (fils.ContainsKey(exestRoot))
        {
            foreach (var file in fils[exestRoot])
            {
                var curExtatsion = file.Key.Split('.').Last();

                if (curExtatsion == exestExtension)
                {
                    final.Add(file.Key, file.Value);
                }
            }
        }

        if (final.Count > 0)
        {
            foreach (var file in final.OrderByDescending(x => x.Value).ThenBy(x => x.Key))
            {
                Console.WriteLine($"{file.Key} - {file.Value} KB");
            }
        }
        else
        {
            Console.WriteLine("No");
        }
    }
}
